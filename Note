### 注解

#### @RequestMapping
~~~
    RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。
    
    RequestMapping注解有六个属性，下面我们把她分成三类进行说明。
    1、 value， method；
    
        value： 指定请求的实际地址，指定的地址可以是URI Template 模式（后面将会说明）；
    
        method： 指定请求的method类型， GET、POST、PUT、DELETE等；
    
    2、 consumes，produces；
    
        consumes： 指定处理请求的提交内容类型（Content-Type），例如application/json, text/html;
    
        produces: 指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回；
    
    3、 params，headers；
    
        params： 指定request中必须包含某些参数值是，才让该方法处理。
    
        headers： 指定request中必须包含某些指定的header值，才能让该方法处理请求。

~~~

##### @Controller
~~~
    @Controller 用来响应页面，@Controller必须配合模版来使用。
~~~


#### @RestController

~~~
    返回json需要@ResponseBody和@Controller配合。
~~~



### mybatis

~~~
    * insertSelective对应的sql语句加入了NULL校验，即只会插入数据不为null的字段值。insert则会插入所有字段，会插入null。
    * service -> dao(mapper) -> mapper.xml -> sql
~~~

### RestTemplate

~~~
    delete() 在特定的URL上对资源执行HTTP DELETE操作
    
    exchange()
    在URL上执行特定的HTTP方法，返回包含对象的ResponseEntity，这个对象是从响应体中
    映射得到的
    
    execute() 在URL上执行特定的HTTP方法，返回一个从响应体映射得到的对象
    
    getForEntity() 发送一个HTTP GET请求，返回的ResponseEntity包含了响应体所映射成的对象
    
    getForObject() 发送一个HTTP GET请求，返回的请求体将映射为一个对象
    
    postForEntity()
    POST 数据到一个URL，返回包含一个对象的ResponseEntity，这个对象是从响应体中映射得
    到的
    
    postForObject() POST 数据到一个URL，返回根据响应体匹配形成的对象
    
    headForHeaders() 发送HTTP HEAD请求，返回包含特定资源URL的HTTP头
    
    optionsForAllow() 发送HTTP OPTIONS请求，返回对特定URL的Allow头信息
    
    postForLocation() POST 数据到一个URL，返回新创建资源的URL
    
    put() PUT 资源到特定的URL

~~~
